#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –ø–æ –Ω–æ–≤–æ–π –ø—Ä–æ—Å—Ç–æ–π –ª–æ–≥–∏–∫–µ
"""

import os
try:
    # –ò–º–ø–æ—Ä—Ç –¥–ª—è –ø—Ä—è–º–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ—Ä–µ–Ω—å
    from config import STORAGE_PATHS
except ImportError:
    # –ò–º–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–∞–∫ –º–æ–¥—É–ª—å
    try:
        from ..config import STORAGE_PATHS
    except ImportError:
        # Fallback –µ—Å–ª–∏ –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç
        STORAGE_PATHS = {
            1: {'base_path': "/home2/n1/files", 'name': "Driver #1 (Store #1)"},
            2: {'base_path': "/www/n2.anplus1.com/files", 'name': "Driver #2 (Store #2)"}
        }


class FileDeleter:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ driver –∏ onserver"""
    
    @staticmethod
    def delete_old_file_simple(filename, onserver, driver):
        """–ü—Ä–æ—Å—Ç–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ driver –∏ onserver"""
        print(f"üîß –£–î–ê–õ–ï–ù–ò–ï –°–¢–ê–†–û–ì–û –§–ê–ô–õ–ê –ü–û –ù–û–í–û–ô –õ–û–ì–ò–ö–ï:")
        print(f"   üìù –ò–º—è —Ñ–∞–π–ª–∞ –ë–î: {filename}")
        print(f"   üìÅ –ü—É—Ç—å –≤ –ë–î (onserver): {onserver}")
        print(f"   üéØ –î—Ä–∞–π–≤–µ—Ä: {driver}")
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â
            storage_config = STORAGE_PATHS.get(driver)
            if not storage_config:
                print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π driver {driver}")
                return False
            
            base_path = storage_config['base_path']
            storage_name = storage_config['name']
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
            full_file_path = os.path.join(base_path, onserver)
            full_file_path = full_file_path.replace('\\', '/')  # –î–ª—è –∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
            
            print(f"üìÇ –ö–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞ ({storage_name}): {base_path}")
            print(f"üîó –§–∞–π–ª –∏—â–µ–º –ø–æ –ø—É—Ç–∏: {full_file_path}")
            
            # –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ª–æ–≥–∏ –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—É—Ç–∏
            print(f"üîç –ü–†–û–í–ï–†–ö–ê –ü–£–¢–ò –ö –§–ê–ô–õ–£:")
            print(f"   üìÅ –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞: {base_path}")
            print(f"   üìé –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å (onserver): {onserver}")
            print(f"   üõ§Ô∏è –ü–æ–ª–Ω—ã–π –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å: {full_file_path}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
            if os.path.exists(full_file_path):
                file_stat = os.stat(full_file_path)
                file_size = file_stat.st_size
                print(f"   üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
                print(f"   üåç –°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç—É–ø–∞: –æ–∫")
                
                try:
                    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
                    os.remove(full_file_path)
                    print(f"‚úÖ –°—Ç–∞—Ä—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ –∏–∑: {full_file_path}")
                    print(f"üîß –£–î–ê–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û: {filename} –∏–∑ {storage_name}")
                    return True
                except OSError as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {e}: –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {full_file_path}")
                    return False
            else:
                print(f"‚ö†Ô∏è –§–ê–ô–õ –ù–ï –ù–ê–ô–î–ï–ù –í –°–ò–°–¢–ï–ú–ï: {full_file_path}")
                print(f"üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ñ–∞–π–ª–∞:")
                print(f"   üìÇ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–∞–∑–æ–≤–æ–π –ø–∞–ø–∫–∏ {base_path}: {os.path.exists(base_path)}")
                if os.path.exists(base_path):
                    parent_dir = os.path.dirname(full_file_path)
                    print(f"   üìÇ –°—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –ø–∞–ø–∫–∞ {parent_dir}: {os.path.exists(parent_dir)}")
                    if os.path.exists(parent_dir):
                        print(f"   üìã –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ {parent_dir}:")
                        try:
                            files_in_dir = os.listdir(parent_dir)
                            for file_item in files_in_dir:
                                print(f"      - {file_item}")
                        except OSError as list_e:
                            print(f"      ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ø–∞–ø–∫–∏: {list_e}")
                
                # –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø—É—Ç–∏ –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
                return FileDeleter._try_alternative_paths(filename, onserver, driver, storage_name, base_path)
                
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
            return False
    
    @staticmethod
    def _try_alternative_paths(filename, onserver, driver, storage_name, base_path):
        """–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª –ø–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º –ø—É—Ç—è–º"""
        print(f"üîç –ü–û–ò–°–ö –ü–û –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ú –ü–£–¢–Ø–ú:")
        
        # 1. –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –ø—É—Ç–∏ onserver 
        alt_paths_to_try = [
            os.path.join(base_path, os.path.basename(onserver)),
            os.path.join(base_path, "files", onserver),
            os.path.join(base_path, "files", os.path.basename(onserver))
        ]
        
        print(f"üìÇ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø—É—Ç–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–∞ {filename}:")
        
        for i, alt_path in enumerate(alt_paths_to_try):
            alt_full_path = alt_path.replace('\\', '/')
            print(f"   {i+1}. {alt_full_path}")
            
            if os.path.exists(alt_full_path):
                try:
                    file_stat = os.stat(alt_full_path)
                    file_size = file_stat.st_size
                    print(f"   ‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω!: {alt_full_path} (—Ä–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç)")
                    
                    os.remove(alt_full_path)
                    print(f"   üîß –§–∞–π–ª —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ: {alt_full_path}")
                    return True
                except OSError as delete_e:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {alt_full_path}: {delete_e}")
            else:
                print(f"   ‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω: {alt_full_path}")
        
        print(f"‚ùå –§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –ø–æ –æ–¥–Ω–æ–º—É –ø—É—Ç–∏")
        return False
    
    @staticmethod
    def get_storage_path(driver):
        """–ü–æ–ª—É—á–∞–µ—Ç –ø—É—Ç—å —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ø–æ driver"""
        storage_config = STORAGE_PATHS.get(driver)
        if storage_config:
            return storage_config['base_path'], storage_config['name']
        else:
            return None, f"Driver #{driver} (Unknown)"
    
    @staticmethod
    def build_full_path(base_path, onserver):
        """–§–æ—Ä–º–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É"""
        full_file_path = os.path.join(base_path, onserver)
        full_file_path = full_file_path.replace('\\', '/')  # –î–ª—è –∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
        return full_file_path


# –ë—ã—Å—Ç—Ä–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä—è–º–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
def delete_file_by_path(filename, onserver, driver):
    """–ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –ø–æ –ø—É—Ç–∏"""
    return FileDeleter.delete_old_file_simple(filename, onserver, driver)
