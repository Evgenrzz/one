#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å FTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è–º–∏
–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤—ã—Ö
"""
import ftplib
import os
from typing import Dict, Any


class FTPManager:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è FTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è–º–∏ –∏ —É–¥–∞–ª–µ–Ω–∏–µ–º —Ñ–∞–π–ª–æ–≤"""
    
    @staticmethod
    def delete_file_via_ftp(storage_config, file_path):
        """–£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ FTP —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –ª–æ–≥–∞–º–∏"""
        try:
            print(f"\nüóÇÔ∏è ===== –°–¢–ê–†–¢ –û–ü–ï–†–ê–¶–ò–ò –£–î–ê–õ–ï–ù–ò–Ø –§–ê–ô–õ–ê =====")
            print(f"üîå FTPManager.delete_file_via_ftp() - –Ω–∞—á–∞–ª–æ –æ–ø–µ—Ä–∞—Ü–∏–∏")
            print(f"üìÅ –¶–µ–ª–µ–≤–æ–π —Ñ–∞–π–ª: {file_path}")
            print(f"üìã –¢–∏–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: {type(storage_config)}")
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç storage_config (tuple –∏–∑ database.py –∏–ª–∏ dict –∏–∑ database_api.py)
            if isinstance(storage_config, tuple):
                # –§–æ—Ä–º–∞—Ç –∏–∑ database.py: [4]=connect_url, [5]=connect_port, [6]=username, [7]=password
                host = storage_config[4]  # connect_url
                port = storage_config[5]  # connect_port
                username = storage_config[6]  # username
                password = storage_config[7]  # password
                print(f"üìä –°–ø–æ—Å–æ–± –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: database.py tuple format")
            elif isinstance(storage_config, dict):
                # –§–æ—Ä–º–∞—Ç –∏–∑ database_api.py (–º–æ–∂–µ—Ç –±—ã—Ç—å —Å –∫–ª—é—á–∞–º–∏ –∫–∞–∫ 'connect_url' –∏–ª–∏ –∫–∞–∫ 'url')
                host = storage_config.get("connect_url") or storage_config.get("url", "")
                port = storage_config.get("connect_port") or storage_config.get("port", "")
                username = storage_config.get("username") or storage_config.get("user", "")
                password = storage_config.get("password") or storage_config.get("pass", "")
                print(f"üìä –°–ø–æ—Å–æ–± –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: database_api.py dict format")
            else:
                raise ValueError(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: {type(storage_config)}")
            
            print(f"üåê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ö FTP:")
            print(f"   üì° –•–æ—Å—Ç: {host}")
            print(f"   üîå –ü–æ—Ä—Ç: {port}")
            print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}")
            print(f"   üîí –ü–∞—Ä–æ–ª—å: {'*' * len(password) if password else '–ù–ï–¢'}")
            print(f"   üéØ –¶–µ–ª—å —É–¥–∞–ª–µ–Ω–∏—è: {file_path}")
            
            ftp = ftplib.FTP()
            ftp.connect(host, int(port))
            ftp.login(username, password)
            
            print(f"‚úÖ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ö FTP –£–°–ü–ï–®–ù–û")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            try:
                current_dir = ftp.pwd()
                print(f"üìÇ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è FTP: {current_dir}")
            except:
                current_dir = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            try:
                file_size = ftp.size(file_path)
                if file_size is not None:
                    print(f"‚úÖ –§–ê–ô–õ –ù–ê–ô–î–ï–ù –ù–ê FTP:")
                    print(f"   üìÅ –ò–º—è —Ñ–∞–π–ª–∞: {file_path}")
                    print(f"   üìä –†–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç")
                    print(f"   üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {current_dir}")
                else:
                    print(f"‚ö†Ô∏è –§–ê–ô–õ –ù–ï –ù–ê–ô–î–ï–ù –ù–ê FTP:")
                    print(f"   üìÅ –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–∞: {file_path}")
                    print(f"   üìÇ –í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {current_dir}")
                    ftp.quit()
                    return False
            except Exception as e:
                print(f"‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")
                print(f"üîÑ –ü–†–û–î–û–õ–ñ–ê–ï–ú –£–î–ê–õ–ï–ù–ò–ï –ë–ï–ó –ü–†–û–í–ï–†–ö–ò...")
            
            print(f"üóëÔ∏è –ü–†–û–¶–ï–°–° –£–î–ê–õ–ï–ù–ò–Ø –§–ê–ô–õ–ê:")
            print(f"   üìÅ –£–¥–∞–ª—è–µ–º: {file_path}")
            try:
                ftp.delete(file_path)
                print(f"‚úÖ –£–î–ê–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û")
                print(f"   üóÇÔ∏è –§–∞–π–ª —É–¥–∞–ª–µ–Ω: {file_path}")
            except Exception as e:
                print(f"‚ùå –û–®–ò–ë–ö–ê –£–î–ê–õ–ï–ù–ò–Ø –§–ê–ô–õ–ê:")
                print(f"   üìÅ –§–∞–π–ª: {file_path}")
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
                ftp.quit()
                return False
            
            ftp.quit()
            print(f"‚úÖ –û–¢–ö–õ–Æ–ß–ï–ù–ò–ï –ö FTP")
            print(f"üéâ –û–ü–ï–†–ê–¶–ò–Ø –£–î–ê–õ–ï–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
            print(f"üóÇÔ∏è ===== –ö–û–ù–ï–¶ –û–ü–ï–†–ê–¶–ò–ò –£–î–ê–õ–ï–ù–ò–Ø –§–ê–ô–õ–ê =====\n")
            return True
            
        except Exception as e:
            print(f"\n‚ùå F–ê–¢–ê–õ–¨–ù–ê–Ø –û–®–ò–ë–ö–ê –£–î–ê–õ–ï–ù–ò–Ø –ß–ï–†–ï–ó FTP:")
            print(f"   üìÅ –§–∞–π–ª: {file_path}")
            print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
            print(f"üóÇÔ∏è ===== –û–®–ò–ë–ö–ê –û–ü–ï–†–ê–¶–ò–ò –£–î–ê–õ–ï–ù–ò–Ø –§–ê–ô–õ–ê =====\n")
            return False
    
    @staticmethod
    def delete_local_file(file_path):
        """–£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª"""
        try:
            if os.path.exists(file_path):
                os.remove(file_path)
                print(f"‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω: {file_path}")
                return True
            else:
                print(f"‚ö†Ô∏è –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {e}")
            return False
    
    @staticmethod
    def delete_file_from_storage(onserver, driver, storage_config=None):
        """–£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ (FTP –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ)"""
        try:
            print(f"üîß FTPManager.delete_file_from_storage: onserver='{onserver}', driver={driver}")
            print(f"üîß –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —É–¥–∞–ª–µ–Ω–∏—è: onserver='{onserver}', driver={driver}")
            print(f"üîß Storage config type: {type(storage_config)}")
            
            if storage_config is not None:
                if isinstance(storage_config, tuple):
                    print(f"üîß Storage tuple length: {len(storage_config)}")
                elif isinstance(storage_config, dict):
                    print(f"üîß Storage dict keys: {storage_config.keys()}")
            else:
                print("üîß –ù–£–õ–õ –°–¢–û–†–ï–î–ñ! –í–û–¢ –í –ß–ï–ú –ü–†–û–ë–õ–ï–ú–ê!")
            
            if storage_config is None:
                print(f"‚ö†Ô∏è –ù–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–ª—è driver={driver}")
                return False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –∏ –≤—ã–≤–æ–¥–∏–º –¥–µ—Ç–∞–ª—å–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
            if isinstance(storage_config, tuple) and len(storage_config) >= 8:
                storage_type = storage_config[2]  # type (1=FTP, 0=–ª–æ–∫–∞–ª—å–Ω–æ–µ)
                storage_host = storage_config[4]  # connect_url
                storage_port = storage_config[5]  # connect_port
                storage_user = storage_config[6]  # username
                print(f"üìä –ù–∞–π–¥–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ ID {driver}:")
                print(f"   üåê –•–æ—Å—Ç: {storage_host}")
                print(f"   üîå –ü–æ—Ä—Ç: {storage_port}")
                print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {storage_user}")
                print(f"   üì¶ –¢–∏–ø: {storage_type} (1=FTP, 0=–ª–æ–∫–∞–ª—å–Ω–æ–µ)")
            elif isinstance(storage_config, dict):
                storage_type = storage_config.get("type", 0)  # type
                storage_host = storage_config.get("connect_url", "")
                storage_port = storage_config.get("connect_port", "")
                storage_user = storage_config.get("username", "")
                print(f"üìä –ù–∞–π–¥–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ ID {driver} (dict —Ñ–æ—Ä–º–∞—Ç):")
                print(f"   üåê –•–æ—Å—Ç: {storage_host}")
                print(f"   üîå –ü–æ—Ä—Ç: {storage_port}")
                print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {storage_user}")
                print(f"   üì¶ –¢–∏–ø: {storage_type} (1=FTP, 0=–ª–æ–∫–∞–ª—å–Ω–æ–µ)")
            else:
                storage_type = 0
                print(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: {type(storage_config)}")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
            if isinstance(storage_config, tuple):
                storage_path = storage_config[8]  # path
            elif isinstance(storage_config, dict):
                storage_path = storage_config.get("path", "")
            else:
                storage_path = ""
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å /files –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if not onserver.startswith('/files'):
                onserver_with_prefix = f"/files/{onserver}"
            else:
                onserver_with_prefix = onserver
            
            full_path = f"{storage_path}{onserver_with_prefix}".replace('//', '/')
            
            print(f"üóÇÔ∏è –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É: {full_path}")
            print(f"üìÇ –ü—É—Ç—å —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: {storage_path}")
            print(f"üìÅ –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å: {onserver_with_prefix}")
            print(f"üîß –¢–∏–ø —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: {storage_type} (1=FTP, 0=–ª–æ–∫–∞–ª—å–Ω–æ–µ)")
            
            if storage_type == 1:  # FTP —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
                print(f"üîå –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ FTP")
                return FTPManager.delete_file_via_ftp(storage_config, full_path)
            else:  # –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
                print(f"üíæ –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ")
                return FTPManager.delete_local_file(full_path)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: {e}")
            return False
