<?php
header('Content-Type: application/json; charset=utf-8');
header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Methods: GET, POST, OPTIONS');
header('Access-Control-Allow-Headers: Content-Type');

// –û–±—Ä–∞–±–æ—Ç–∫–∞ OPTIONS –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è CORS
if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {
    exit(0);
}

// –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á
define('API_KEY', 'GBpk54ey547h54');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–∞
if (!isset($_GET['key']) || $_GET['key'] !== API_KEY) {
    echo json_encode(["error" => "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω"]);
    exit;
}

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
$mysqli = new mysqli("localhost", "ook", "LqDP2vrZznr8vxJI7RzN", "ook");
if ($mysqli->connect_errno) {
    echo json_encode(["error" => $mysqli->connect_error]);
    exit;
}

$action = $_GET['action'] ?? 'help';

// üìå –°–ø—Ä–∞–≤–∫–∞ –ø–æ API
if ($action === 'help') {
    echo json_encode([
        "api_name" => "5play.dev Database API",
        "version" => "2.0",
        "endpoints" => [
            "get_posts" => "GET ?action=get_posts&key=API_KEY - –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏ dle_post",
            "get_google_play_data" => "GET ?action=get_google_play_data&key=API_KEY - –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è Google Play Links",
            "update_post" => "POST ?action=update_post&key=API_KEY - –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å",
            "check_version" => "GET ?action=check_version&id=ID&key=API_KEY - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏—é –≤ apk-original",
            "update_file" => "POST ?action=update_file&key=API_KEY - –û–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª –≤ dle_files",
            "get_post" => "GET ?action=get_post&id=ID&key=API_KEY - –ü–æ–ª—É—á–∏—Ç—å –∑–∞–ø–∏—Å—å –ø–æ ID",
            "update_version" => "POST ?action=update_version&key=API_KEY - –û–±–Ω–æ–≤–∏—Ç—å –≤–µ—Ä—Å–∏—é –∏–≥—Ä—ã",
            "check_apk_original" => "GET ?action=check_apk_original&id=ID&version=VERSION&key=API_KEY - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏—é –≤ apk-original –¥–ª—è parser1",
            "add_dle_file" => "POST ?action=add_dle_file&key=API_KEY - –î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª –≤ dle_files",
            "update_dle_file" => "POST ?action=update_dle_file&key=API_KEY - –û–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª –≤ dle_files",
            "update_apk_original" => "POST ?action=update_apk_original&key=API_KEY - –û–±–Ω–æ–≤–∏—Ç—å apk-original –≤ dle_post",
            "add_tracking" => "POST ?action=add_tracking&key=API_KEY - –î–æ–±–∞–≤–∏—Ç—å –≤ —Ç–∞–±–ª–∏—Ü—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è",
            "check_duplicate" => "GET ?action=check_duplicate&key=API_KEY - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥—É–±–ª–∏ —Ñ–∞–π–ª–æ–≤",
            "get_storage_info" => "GET ?action=get_storage_info&id=ID&key=API_KEY - –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ",
            "check_mod_at" => "GET ?action=check_mod_at&id=ID&version=VERSION&key=API_KEY - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏—é –≤ mod-at –¥–ª—è parser2",
            "check_duplicate_mod" => "GET ?action=check_duplicate_mod&key=API_KEY - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥—É–±–ª–∏ –¥–ª—è –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
            "add_tracking_mod" => "POST ?action=add_tracking_mod&key=API_KEY - –î–æ–±–∞–≤–∏—Ç—å –≤ —Ç–∞–±–ª–∏—Ü—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –º–æ–¥–æ–≤",
            "update_mod_at" => "POST ?action=update_mod_at&key=API_KEY - –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª–µ mod-at –≤ dle_post",
            "create_mod_tracking_table" => "GET ?action=create_mod_tracking_table&key=API_KEY - –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –º–æ–¥–æ–≤",
            "check_mod_table_structure" => "GET ?action=check_mod_table_structure&key=API_KEY - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã file_tracking_mod",
            "update_dle_file" => "POST ?action=update_dle_file&key=API_KEY - –û–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª –≤ dle_files",
            "get_file_info" => "POST ?action=get_file_info&key=API_KEY - –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ –∏–∑ dle_files"
        ]
    ], JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT);
    exit;
}

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π dle_post
if ($action === 'get_posts') {
    $query = "SELECT id, xfields, title FROM dle_post";
    $result = $mysqli->query($query);

    if (!$result) {
        echo json_encode(["error" => $mysqli->error]);
        exit;
    }

    $data = [];
    while ($row = $result->fetch_assoc()) {
        $data[] = $row;
    }

    echo json_encode([
        "success" => true,
        "count" => count($data),
        "data" => $data
    ], JSON_UNESCAPED_UNICODE);
    exit;
}

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Google Play Links (–∞–Ω–∞–ª–æ–≥ get_google_play_links.pl)
if ($action === 'get_google_play_data') {
    $query = "SELECT id, xfields FROM dle_post";
    $result = $mysqli->query($query);

    if (!$result) {
        echo json_encode(["error" => $mysqli->error]);
        exit;
    }

    $data = [];
    while ($row = $result->fetch_assoc()) {
        $id = $row['id'];
        $xfields = $row['xfields'];
        
        $gp_url = "-";
        $ver_game = "";

        // –ï—Å–ª–∏ –µ—Å—Ç—å upppp ‚Äî –±–µ—Ä—ë–º –µ—ë
        if (preg_match('/\|\|upppp\|([^\|"\']+)/', $xfields, $matches)) {
            $gp_url = $matches[1];
        }
        // –ò–Ω–∞—á–µ, –µ—Å–ª–∏ –µ—Å—Ç—å google_play_url ‚Äî –±–µ—Ä—ë–º –µ—ë
        elseif (preg_match('/\|\|google_play_url\|([^|]+)\|\|/', $xfields, $matches)) {
            $gp_url = $matches[1];
        }

        // –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–≥—Ä—ã
        if (preg_match('/\|\|ver_game\|([^|]+)\|\|/', $xfields, $matches)) {
            $ver_game = $matches[1];
        }

        if ($ver_game !== "") {
            $data[] = [
                "id" => $id,
                "gp_url" => $gp_url,
                "ver_game" => $ver_game
            ];
        } else {
            $data[] = [
                "id" => $id,
                "gp_url" => $gp_url
            ];
        }
    }

    echo json_encode([
        "success" => true,
        "count" => count($data),
        "data" => $data
    ], JSON_UNESCAPED_UNICODE);
    exit;
}

// üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ –≤ apk-original
if ($action === 'check_version') {
    $id = intval($_GET['id'] ?? 0);
    $version = $_GET['version'] ?? '';
    
    if ($id <= 0 || !$version) {
        echo json_encode(["error" => "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö"]);
        exit;
    }

    $query = "SELECT xfields FROM dle_post WHERE id = ?";
    $stmt = $mysqli->prepare($query);
    $stmt->bind_param("i", $id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($row = $result->fetch_assoc()) {
        $xfields = $row['xfields'];
        
        // –ò—â–µ–º –≤–µ—Ä—Å–∏—é –≤ apk-original
        if (preg_match('/\|\|apk-original\|([^|]+)\|\|/', $xfields, $matches)) {
            $apk_original = $matches[1];
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
            if (preg_match('/(\d+\.\d+\.?\d*)/', $apk_original, $version_matches)) {
                $current_version = $version_matches[1];
                
                // –ü—Ä–æ—Å—Ç–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π
                $need_update = version_compare($current_version, $version) < 0;
                
                echo json_encode([
                    "success" => true,
                    "id" => $id,
                    "current_version" => $current_version,
                    "new_version" => $version,
                    "need_update" => $need_update,
                    "apk_original" => $apk_original
                ], JSON_UNESCAPED_UNICODE);
                exit;
            }
        }
        
        echo json_encode([
            "success" => true,
            "id" => $id,
            "current_version" => null,
            "new_version" => $version,
            "need_update" => true,
            "apk_original" => null
        ], JSON_UNESCAPED_UNICODE);
    } else {
        echo json_encode(["error" => "–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"]);
    }
    exit;
}

// üìå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ (POST)
if ($action === 'update_post' && $_SERVER['REQUEST_METHOD'] === 'POST') {
    $id = intval($_POST['id'] ?? 0);
    $new_xfields = $_POST['xfields'] ?? '';
    $new_date = $_POST['date'] ?? '';
    $new_editdate = intval($_POST['editdate'] ?? 0);

    if ($id <= 0 || !$new_xfields || !$new_date || !$new_editdate) {
        echo json_encode(["error" => "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö"]);
        exit;
    }

    $stmt = $mysqli->prepare("
        UPDATE dle_post p
        LEFT JOIN dle_post_extras e ON p.id = e.news_id
        SET p.xfields = ?, p.date = ?, e.editdate = ?
        WHERE p.id = ?
    ");
    $stmt->bind_param("ssii", $new_xfields, $new_date, $new_editdate, $id);

    if ($stmt->execute()) {
        echo json_encode([
            "success" => true,
            "id" => $id,
            "message" => "–ó–∞–ø–∏—Å—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
        ], JSON_UNESCAPED_UNICODE);
    } else {
        echo json_encode(["error" => $stmt->error]);
    }
    exit;
}

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ø–æ ID
if ($action === 'get_post') {
    $id = intval($_GET['id'] ?? 0);
    
    if ($id <= 0) {
        echo json_encode(["error" => "–ù–µ–≤–µ—Ä–Ω—ã–π ID"]);
        exit;
    }

    $query = "SELECT id, xfields, title FROM dle_post WHERE id = ?";
    $stmt = $mysqli->prepare($query);
    $stmt->bind_param("i", $id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($row = $result->fetch_assoc()) {
        echo json_encode([
            "success" => true,
            "data" => $row
        ], JSON_UNESCAPED_UNICODE);
    } else {
        echo json_encode(["error" => "–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"]);
    }
    exit;
}

// üìå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –∏–≥—Ä—ã
if ($action === 'update_version' && $_SERVER['REQUEST_METHOD'] === 'POST') {
    $id = intval($_POST['id'] ?? 0);
    $new_version = $_POST['version'] ?? '';
    $new_date = $_POST['date'] ?? '';
    $new_editdate = intval($_POST['editdate'] ?? 0);

    if ($id <= 0 || !$new_version || !$new_date || !$new_editdate) {
        echo json_encode(["error" => "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö"]);
        exit;
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    $query = "SELECT xfields FROM dle_post WHERE id = ?";
    $stmt = $mysqli->prepare($query);
    $stmt->bind_param("i", $id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if (!$row = $result->fetch_assoc()) {
        echo json_encode(["error" => "–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"]);
        exit;
    }

    $xfields = $row['xfields'];
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏—é –≤ xfields
    $new_xfields = preg_replace(
        '/\|\|ver_game\|([^|]+)\|\|/',
        "||ver_game|$new_version||",
        $xfields
    );

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±–µ —Ç–∞–±–ª–∏—Ü—ã
    $update_stmt = $mysqli->prepare("
        UPDATE dle_post p
        LEFT JOIN dle_post_extras e ON p.id = e.news_id
        SET p.xfields = ?, p.date = ?, e.editdate = ?
        WHERE p.id = ?
    ");
    $update_stmt->bind_param("ssii", $new_xfields, $new_date, $new_editdate, $id);

    if ($update_stmt->execute()) {
        echo json_encode([
            "success" => true,
            "id" => $id,
            "old_xfields" => $xfields,
            "new_xfields" => $new_xfields,
            "message" => "–í–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
        ], JSON_UNESCAPED_UNICODE);
    } else {
        echo json_encode(["error" => "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: " . $update_stmt->error]);
    }
    exit;
}

// üìå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ dle_files
if ($action === 'update_file' && $_SERVER['REQUEST_METHOD'] === 'POST') {
    $news_id = intval($_POST['news_id'] ?? 0);
    $app_name = $_POST['app_name'] ?? '';
    $version = $_POST['version'] ?? '';
    $file_extension = $_POST['file_extension'] ?? '';
    $filename = $_POST['filename'] ?? '';
    $file_size = intval($_POST['file_size'] ?? 0);
    $checksum = $_POST['checksum'] ?? '';
    $download_dir = $_POST['download_dir'] ?? '';

    if ($news_id <= 0 || !$app_name || !$version || !$filename) {
        echo json_encode(["error" => "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö"]);
        exit;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ dle_files
    $stmt = $mysqli->prepare("
        INSERT INTO dle_files (news_id, name, size, checksum, path)
        VALUES (?, ?, ?, ?, ?)
        ON DUPLICATE KEY UPDATE
        name = VALUES(name),
        size = VALUES(size),
        checksum = VALUES(checksum),
        path = VALUES(path)
    ");
    
    $file_path = $download_dir . '/' . $filename;
    $stmt->bind_param("isisss", $news_id, $filename, $file_size, $checksum, $file_path);

    if ($stmt->execute()) {
        $file_id = $mysqli->insert_id ?: $news_id; // –ï—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º news_id
        
        // –û–±–Ω–æ–≤–ª—è–µ–º dle_post
        $update_stmt = $mysqli->prepare("
            UPDATE dle_post 
            SET xfields = REPLACE(xfields, '||apk-original||', CONCAT('||apk-original|', ?, '||'))
            WHERE id = ?
        ");
        $update_stmt->bind_param("si", $filename, $news_id);
        
        if ($update_stmt->execute()) {
            echo json_encode([
                "success" => true,
                "file_id" => $file_id,
                "news_id" => $news_id,
                "message" => "–§–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω"
            ], JSON_UNESCAPED_UNICODE);
        } else {
            echo json_encode(["error" => "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è dle_post: " . $update_stmt->error]);
        }
    } else {
        echo json_encode(["error" => "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è dle_files: " . $stmt->error]);
    }
    exit;
}

// üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ –≤ apk-original –¥–ª—è parser1
if ($action === 'check_apk_original') {
    $news_id = intval($_GET['id'] ?? 0);
    $current_version = $_GET['version'] ?? '';
    
    if ($news_id <= 0 || !$current_version) {
        echo json_encode(["error" => "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö"]);
        exit;
    }
    
    $stmt = $mysqli->prepare("SELECT xfields FROM dle_post WHERE id = ?");
    $stmt->bind_param("i", $news_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($row = $result->fetch_assoc()) {
        $xfields = $row['xfields'];
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ –ø–æ–ª—è apk-original
        if (preg_match('/apk-original\|\[attachment=\d+:(.+?)\]/', $xfields, $matches)) {
            $attachment_name = $matches[1];
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ –∏–º–µ–Ω–∏ attachment
            if (preg_match('/(\d+\.\d+(?:\.\d+)?)/', $attachment_name, $version_matches)) {
                $apk_original_version = $version_matches[1];
                
                // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –≤–µ—Ä—Å–∏–∏
                $need_update = version_compare($current_version, $apk_original_version) > 0;
                
                echo json_encode([
                    "success" => true,
                    "news_id" => $news_id,
                    "attachment_name" => $attachment_name,
                    "apk_original_version" => $apk_original_version,
                    "current_version" => $current_version,
                    "need_update" => $need_update,
                    "message" => $need_update ? "–ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ" : "–í–µ—Ä—Å–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–∞"
                ], JSON_UNESCAPED_UNICODE);
            } else {
                echo json_encode([
                    "success" => true,
                    "news_id" => $news_id,
                    "attachment_name" => $attachment_name,
                    "apk_original_version" => null,
                    "current_version" => $current_version,
                    "need_update" => true,
                    "message" => "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –≤–µ—Ä—Å–∏—é –∏–∑ attachment"
                ], JSON_UNESCAPED_UNICODE);
            }
        } else {
            echo json_encode([
                "success" => true,
                "news_id" => $news_id,
                "attachment_name" => null,
                "apk_original_version" => null,
                "current_version" => $current_version,
                "need_update" => true,
                "message" => "–ü–æ–ª–µ apk-original –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç attachment"
            ], JSON_UNESCAPED_UNICODE);
        }
    } else {
        echo json_encode(["error" => "–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"]);
    }
    exit;
}

// üìå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ dle_files
if ($action === 'add_dle_file' && $_SERVER['REQUEST_METHOD'] === 'POST') {
    $news_id = intval($_POST['news_id'] ?? 0);
    $name = $_POST['name'] ?? '';
    $onserver = $_POST['onserver'] ?? '';
    $author = $_POST['author'] ?? 'sergeyAi';
    $date = $_POST['date'] ?? time();
    $dcount = intval($_POST['dcount'] ?? 0);
    $size = intval($_POST['size'] ?? 0);
    $checksum = $_POST['checksum'] ?? '';
    $driver = intval($_POST['driver'] ?? 2);
    $is_public = intval($_POST['is_public'] ?? 0);
    
    if ($news_id <= 0 || !$name || !$onserver) {
        echo json_encode(["error" => "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö"]);
        exit;
    }
    
    $stmt = $mysqli->prepare("
        INSERT INTO dle_files (news_id, name, onserver, author, date, dcount, size, checksum, driver, is_public)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    ");
    $stmt->bind_param("issiiiisis", $news_id, $name, $onserver, $author, $date, $dcount, $size, $checksum, $driver, $is_public);
    
    if ($stmt->execute()) {
        $file_id = $mysqli->insert_id;
        echo json_encode([
            "success" => true,
            "file_id" => $file_id,
            "message" => "–§–∞–π–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ dle_files"
        ], JSON_UNESCAPED_UNICODE);
    } else {
        echo json_encode(["error" => "–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ dle_files: " . $stmt->error]);
    }
    exit;
}

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ –∏–∑ dle_files (parser2)
if ($action === 'get_file_info') {
    $file_id = intval($_POST['file_id'] ?? 0);
    
    if (!$file_id) {
        echo json_encode(["error" => "ID —Ñ–∞–π–ª–∞ –Ω–µ —É–∫–∞–∑–∞–Ω"]);
        exit;
    }
    
    $stmt = $mysqli->prepare("SELECT id, news_id, name, onserver, author, date, dcount, size, checksum, driver, is_public FROM dle_files WHERE id = ?");
    $stmt->bind_param("i", $file_id);
    $stmt->execute();
    $result = $stmt->get_result();
    $file_info = $result->fetch_assoc();
    
    if ($file_info) {
        echo json_encode([
            "success" => true,
            "file_info" => $file_info
        ]);
    } else {
        echo json_encode([
            "success" => false,
            "error" => "–§–∞–π–ª —Å ID $file_id –Ω–µ –Ω–∞–π–¥–µ–Ω"
        ]);
    }
    exit;
}

// üìå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ dle_files
if ($action === 'update_dle_file' && $_SERVER['REQUEST_METHOD'] === 'POST') {
    $file_id = intval($_POST['file_id'] ?? 0);
    $name = $_POST['name'] ?? '';
    $onserver = $_POST['onserver'] ?? '';
    $date = $_POST['date'] ?? time();
    $size = intval($_POST['size'] ?? 0);
    $checksum = $_POST['checksum'] ?? '';
    
    if ($file_id <= 0 || !$name || !$onserver) {
        echo json_encode(["error" => "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö"]);
        exit;
    }
    
    $stmt = $mysqli->prepare("
        UPDATE dle_files 
        SET name = ?, onserver = ?, date = ?, size = ?, checksum = ?
        WHERE id = ?
    ");
    $stmt->bind_param("ssiisi", $name, $onserver, $date, $size, $checksum, $file_id);
    
    if ($stmt->execute()) {
        echo json_encode([
            "success" => true,
            "file_id" => $file_id,
            "message" => "–§–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω –≤ dle_files"
        ], JSON_UNESCAPED_UNICODE);
    } else {
        echo json_encode(["error" => "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è dle_files: " . $stmt->error]);
    }
    exit;
}

// üìå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ apk-original –≤ dle_post
if ($action === 'update_apk_original' && $_SERVER['REQUEST_METHOD'] === 'POST') {
    $news_id = intval($_POST['news_id'] ?? 0);
    $file_id = intval($_POST['file_id'] ?? 0);
    $app_name = $_POST['app_name'] ?? '';
    $version = $_POST['version'] ?? '';
    $file_extension = $_POST['file_extension'] ?? '';
    
    if ($news_id <= 0 || $file_id <= 0 || !$app_name || !$version) {
        echo json_encode(["error" => "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö"]);
        exit;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ xfields
    $stmt = $mysqli->prepare("SELECT xfields FROM dle_post WHERE id = ?");
    $stmt->bind_param("i", $news_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($row = $result->fetch_assoc()) {
        $xfields = $row['xfields'];
        
        // –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
        $transliterated_name = transliterate_cyrillic($app_name);
        $readable_filename = $transliterated_name . ' ' . $version . $file_extension;
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π attachment
        $new_attachment = "[attachment={$file_id}:{$readable_filename}]";
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ apk-original
        $pattern = '/apk-original\|[^|]*\|\|/';
        $replacement = 'apk-original|' . $new_attachment . '||';
        
        if (preg_match($pattern, $xfields)) {
            $new_xfields = preg_replace($pattern, $replacement, $xfields);
        } else {
            $new_xfields = $xfields . '||apk-original|' . $new_attachment . '||';
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
        $update_stmt = $mysqli->prepare("UPDATE dle_post SET xfields = ? WHERE id = ?");
        $update_stmt->bind_param("si", $new_xfields, $news_id);
        
        if ($update_stmt->execute()) {
            echo json_encode([
                "success" => true,
                "news_id" => $news_id,
                "file_id" => $file_id,
                "attachment" => $new_attachment,
                "message" => "–ü–æ–ª–µ apk-original –æ–±–Ω–æ–≤–ª–µ–Ω–æ"
            ], JSON_UNESCAPED_UNICODE);
        } else {
            echo json_encode(["error" => "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è dle_post: " . $update_stmt->error]);
        }
    } else {
        echo json_encode(["error" => "–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"]);
    }
    exit;
}

// üìå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
if ($action === 'add_tracking' && $_SERVER['REQUEST_METHOD'] === 'POST') {
    $news_id = intval($_POST['news_id'] ?? 0);
    $app_name = $_POST['app_name'] ?? '';
    $version = $_POST['version'] ?? '';
    $file_size = intval($_POST['file_size'] ?? 0);
    $file_path = $_POST['file_path'] ?? '';
    $checksum = $_POST['checksum'] ?? '';
    $sha256_hash = $_POST['sha256_hash'] ?? null;
    $package_name = $_POST['package_name'] ?? null;
    $source_priority = intval($_POST['source_priority'] ?? 0);
    $source_url = $_POST['source_url'] ?? '';
    
    if ($news_id <= 0 || !$app_name || !$version || !$file_path || !$checksum) {
        echo json_encode(["error" => "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö"]);
        exit;
    }
    
    // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    $create_table = "
        CREATE TABLE IF NOT EXISTS file_tracking (
            id INT AUTO_INCREMENT PRIMARY KEY,
            news_id INT NOT NULL,
            app_name VARCHAR(255) NOT NULL,
            version VARCHAR(100) NOT NULL,
            file_size BIGINT NOT NULL,
            file_path VARCHAR(500) NOT NULL,
            checksum VARCHAR(32) NOT NULL,
            sha256_hash VARCHAR(64) NULL,
            package_name VARCHAR(255) NULL,
            source_priority INT DEFAULT 0,
            download_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
            source_url VARCHAR(500) NOT NULL,
            INDEX idx_news_id (news_id),
            INDEX idx_app_name (app_name),
            INDEX idx_sha256 (sha256_hash),
            INDEX idx_package_name (package_name),
            INDEX idx_source_priority (source_priority)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
    ";
    $mysqli->query($create_table);
    
    $stmt = $mysqli->prepare("
        INSERT INTO file_tracking (news_id, app_name, version, file_size, file_path, checksum, sha256_hash, package_name, source_priority, source_url)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    ");
    $stmt->bind_param("ississssis", $news_id, $app_name, $version, $file_size, $file_path, $checksum, $sha256_hash, $package_name, $source_priority, $source_url);
    
    if ($stmt->execute()) {
        echo json_encode([
            "success" => true,
            "tracking_id" => $mysqli->insert_id,
            "message" => "–ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è"
        ], JSON_UNESCAPED_UNICODE);
    } else {
        echo json_encode(["error" => "–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ tracking: " . $stmt->error]);
    }
    exit;
}

// üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–µ–π —Ñ–∞–π–ª–æ–≤
if ($action === 'check_duplicate') {
    $news_id = intval($_GET['news_id'] ?? 0);
    $app_name = $_GET['app_name'] ?? '';
    $version = $_GET['version'] ?? '';
    $sha256_hash = $_GET['sha256_hash'] ?? null;
    $file_size = intval($_GET['file_size'] ?? 0);
    
    if ($news_id <= 0 || !$app_name || !$version) {
        echo json_encode(["error" => "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö"]);
        exit;
    }
    
    $duplicates = [];
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ SHA-256
    if ($sha256_hash) {
        $stmt = $mysqli->prepare("
            SELECT id, version, file_size, checksum, file_path, source_priority
            FROM file_tracking
            WHERE sha256_hash = ?
            ORDER BY source_priority DESC, last_updated DESC LIMIT 1
        ");
        $stmt->bind_param("s", $sha256_hash);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($row = $result->fetch_assoc()) {
            $duplicates['sha256'] = $row;
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ news_id + app_name + version
    $stmt = $mysqli->prepare("
        SELECT id, version, file_size, checksum, file_path, source_priority
        FROM file_tracking
        WHERE news_id = ? AND app_name = ? AND version = ?
        ORDER BY source_priority DESC, last_updated DESC LIMIT 1
    ");
    $stmt->bind_param("iss", $news_id, $app_name, $version);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($row = $result->fetch_assoc()) {
        $duplicates['exact'] = $row;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —Ä–∞–∑–º–µ—Ä—É —Ñ–∞–π–ª–∞ (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω)
    if ($file_size > 0) {
        $tolerance = intval($file_size * 0.05); // 5% –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ
        $min_size = $file_size - $tolerance;
        $max_size = $file_size + $tolerance;
        
        $stmt = $mysqli->prepare("
            SELECT id, app_name, version, file_size, file_path, source_priority, sha256_hash
            FROM file_tracking
            WHERE file_size BETWEEN ? AND ?
            ORDER BY ABS(file_size - ?) ASC, source_priority DESC, last_updated DESC
            LIMIT 5
        ");
        $stmt->bind_param("iii", $min_size, $max_size, $file_size);
        $stmt->execute();
        $result = $stmt->get_result();
        
        $size_matches = [];
        while ($row = $result->fetch_assoc()) {
            $size_matches[] = $row;
        }
        
        if (!empty($size_matches)) {
            $duplicates['size'] = $size_matches;
        }
    }
    
    echo json_encode([
        "success" => true,
        "duplicates" => $duplicates,
        "has_duplicates" => !empty($duplicates),
        "message" => empty($duplicates) ? "–î—É–±–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" : "–ù–∞–π–¥–µ–Ω—ã –¥—É–±–ª–∏"
    ], JSON_UNESCAPED_UNICODE);
    exit;
}

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
if ($action === 'get_storage_info') {
    $storage_id = intval($_GET['id'] ?? 0);
    
    if ($storage_id <= 0) {
        echo json_encode(["error" => "–ù–µ–≤–µ—Ä–Ω—ã–π ID —Ö—Ä–∞–Ω–∏–ª–∏—â–∞"]);
        exit;
    }
    
    $stmt = $mysqli->prepare("SELECT * FROM dle_storage WHERE id = ?");
    $stmt->bind_param("i", $storage_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($row = $result->fetch_assoc()) {
        echo json_encode([
            "success" => true,
            "storage" => [
                "id" => $row['id'],
                "name" => $row['name'],
                "type" => $row['type'],
                "accesstype" => $row['accesstype'],
                "connect_url" => $row['connect_url'],
                "connect_port" => $row['connect_port'],
                "username" => $row['username'],
                "password" => $row['password'],
                "path" => $row['path'],
                "http_url" => $row['http_url'],
                "client_key" => $row['client_key'],
                "secret_key" => $row['secret_key'],
                "bucket" => $row['bucket'],
                "region" => $row['region'],
                "default_storage" => $row['default_storage'],
                "enabled" => $row['enabled'],
                "posi" => $row['posi']
            ],
            "message" => "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—É—á–µ–Ω–∞"
        ], JSON_UNESCAPED_UNICODE);
    } else {
        echo json_encode(["error" => "–•—Ä–∞–Ω–∏–ª–∏—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"]);
    }
    exit;
}

// –§—É–Ω–∫—Ü–∏—è —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–∏ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
function transliterate_cyrillic($text) {
    $cyrillic_to_latin = [
        '–∞' => 'a', '–±' => 'b', '–≤' => 'v', '–≥' => 'g', '–¥' => 'd', '–µ' => 'e', '—ë' => 'yo',
        '–∂' => 'zh', '–∑' => 'z', '–∏' => 'i', '–π' => 'y', '–∫' => 'k', '–ª' => 'l', '–º' => 'm',
        '–Ω' => 'n', '–æ' => 'o', '–ø' => 'p', '—Ä' => 'r', '—Å' => 's', '—Ç' => 't', '—É' => 'u',
        '—Ñ' => 'f', '—Ö' => 'h', '—Ü' => 'ts', '—á' => 'ch', '—à' => 'sh', '—â' => 'sch',
        '—ä' => '', '—ã' => 'y', '—å' => '', '—ç' => 'e', '—é' => 'yu', '—è' => 'ya',
        '–ê' => 'A', '–ë' => 'B', '–í' => 'V', '–ì' => 'G', '–î' => 'D', '–ï' => 'E', '–Å' => 'Yo',
        '–ñ' => 'Zh', '–ó' => 'Z', '–ò' => 'I', '–ô' => 'Y', '–ö' => 'K', '–õ' => 'L', '–ú' => 'M',
        '–ù' => 'N', '–û' => 'O', '–ü' => 'P', '–†' => 'R', '–°' => 'S', '–¢' => 'T', '–£' => 'U',
        '–§' => 'F', '–•' => 'H', '–¶' => 'Ts', '–ß' => 'Ch', '–®' => 'Sh', '–©' => 'Sch',
        '–™' => '', '–´' => 'Y', '–¨' => '', '–≠' => 'E', '–Æ' => 'Yu', '–Ø' => 'Ya'
    ];
    
    $result = "";
    for ($i = 0; $i < mb_strlen($text); $i++) {
        $char = mb_substr($text, $i, 1);
        if (isset($cyrillic_to_latin[$char])) {
            $result .= $cyrillic_to_latin[$char];
        } elseif ($char === '+') {
            $result .= ' ';
        } else {
            $result .= $char;
        }
    }
    
    // –£–±–∏—Ä–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã
    $result = preg_replace('/\s+/', ' ', trim($result));
    
    return $result;
}

// ===== PARSER2 ENDPOINTS =====

// üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ –≤ –ø–æ–ª–µ mod-at –¥–ª—è parser2
if ($action === 'check_mod_at') {
    $id = intval($_GET['id'] ?? 0);
    $version = $_GET['version'] ?? '';
    
    if (!$id) {
        echo json_encode(["error" => "ID –Ω–µ —É–∫–∞–∑–∞–Ω"]);
        exit;
    }
    
    $stmt = $mysqli->prepare("SELECT id, xfields FROM dle_post WHERE id = ?");
    $stmt->bind_param("i", $id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($row = $result->fetch_assoc()) {
        $xfields = $row['xfields'];
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º attachment –∏–∑ –ø–æ–ª—è mod-at
        $attachment_name = null;
        if (preg_match('/mod-at\|\[attachment=(\d+):([^\]]+)\]/', $xfields, $matches)) {
            $attachment_name = $matches[2];
        }
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ attachment
        $mod_at_version = null;
        if ($attachment_name) {
            if (preg_match('/(\d+\.\d+(?:\.\d+)?)/', $attachment_name, $version_matches)) {
                $mod_at_version = $version_matches[1];
            }
        }
        
        // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –≤–µ—Ä—Å–∏–∏
        $need_update = true;
        if ($mod_at_version && $version) {
            $need_update = version_compare($version, $mod_at_version, '>');
        }
        
        echo json_encode([
            "success" => true,
            "news_id" => $id,
            "attachment_name" => $attachment_name,
            "mod_at_version" => $mod_at_version,
            "need_update" => $need_update
        ]);
    } else {
        echo json_encode(["error" => "–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"]);
    }
    exit;
}

// üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–µ–π –¥–ª—è –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π (parser2)
if ($action === 'check_duplicate_mod') {
    $news_id = intval($_GET['news_id'] ?? 0);
    $app_name = $_GET['app_name'] ?? '';
    $version = $_GET['version'] ?? '';
    $sha256_hash = $_GET['sha256_hash'] ?? '';
    $package_name = $_GET['package_name'] ?? '';
    $file_size = intval($_GET['file_size'] ?? 0);
    $table = $_GET['table'] ?? 'file_tracking_mod';
    
    $duplicates = [];
    $has_duplicates = false;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω—ã–µ –¥—É–±–ª–∏ –ø–æ SHA-256
    if ($sha256_hash) {
        $stmt = $mysqli->prepare("SELECT * FROM $table WHERE sha256_hash = ?");
        $stmt->bind_param("s", $sha256_hash);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($row = $result->fetch_assoc()) {
            $duplicates['sha256'] = $row;
            $has_duplicates = true;
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω—ã–µ –¥—É–±–ª–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –≤–µ—Ä—Å–∏–∏
    if (!$has_duplicates && $news_id && $app_name && $version) {
        $stmt = $mysqli->prepare("SELECT * FROM $table WHERE news_id = ? AND app_name = ? AND version = ?");
        $stmt->bind_param("iss", $news_id, $app_name, $version);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($row = $result->fetch_assoc()) {
            $duplicates['exact'] = $row;
            $has_duplicates = true;
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏ –ø–æ —Ä–∞–∑–º–µ—Ä—É —Ñ–∞–π–ª–∞
    if (!$has_duplicates && $file_size > 0) {
        $tolerance_percent = 5;
        $min_size = $file_size * (1 - $tolerance_percent / 100);
        $max_size = $file_size * (1 + $tolerance_percent / 100);
        
        $stmt = $mysqli->prepare("SELECT * FROM $table WHERE file_size BETWEEN ? AND ? ORDER BY ABS(file_size - ?) LIMIT 5");
        $stmt->bind_param("ddi", $min_size, $max_size, $file_size);
        $stmt->execute();
        $result = $stmt->get_result();
        
        $size_duplicates = [];
        while ($row = $result->fetch_assoc()) {
            $size_duplicates[] = $row;
        }
        
        if (!empty($size_duplicates)) {
            $duplicates['size'] = $size_duplicates;
            $has_duplicates = true;
        }
    }
    
    echo json_encode([
        "success" => true,
        "has_duplicates" => $has_duplicates,
        "duplicates" => $duplicates
    ]);
    exit;
}

// üìå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –º–æ–¥–æ–≤ (parser2)
if ($action === 'add_tracking_mod') {
    $news_id = intval($_POST['news_id'] ?? 0);
    $app_name = $_POST['app_name'] ?? '';
    $version = $_POST['version'] ?? '';
    $file_size = intval($_POST['file_size'] ?? 0);
    $file_path = $_POST['file_path'] ?? '';
    $checksum = $_POST['checksum'] ?? '';
    $source_url = $_POST['source_url'] ?? '';
    $sha256_hash = $_POST['sha256_hash'] ?? '';
    $package_name = $_POST['package_name'] ?? '';
    $source_priority = intval($_POST['source_priority'] ?? 0);
    $table = $_POST['table'] ?? 'file_tracking_mod';
    
    if (!$news_id || !$app_name || !$version || !$file_size || !$file_path || !$checksum || !$source_url) {
        echo json_encode(["error" => "–ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã"]);
        exit;
    }
    
    $stmt = $mysqli->prepare("INSERT INTO $table (news_id, app_name, version, file_size, file_path, checksum, source_url, sha256_hash, package_name, source_priority) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
    $stmt->bind_param("ississsssi", $news_id, $app_name, $version, $file_size, $file_path, $checksum, $source_url, $sha256_hash, $package_name, $source_priority);
    
    if ($stmt->execute()) {
        $tracking_id = $mysqli->insert_id;
        echo json_encode([
            "success" => true,
            "tracking_id" => $tracking_id
        ]);
    } else {
        echo json_encode(["error" => "–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è: " . $mysqli->error]);
    }
    exit;
}

// üìå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è mod-at –≤ dle_post (parser2)
if ($action === 'update_mod_at') {
    $news_id = intval($_POST['news_id'] ?? 0);
    $file_id = intval($_POST['file_id'] ?? 0);
    $app_name = $_POST['app_name'] ?? '';
    $version = $_POST['version'] ?? '';
    $file_extension = $_POST['file_extension'] ?? '';
    
    if (!$news_id || !$file_id || !$app_name) {
        echo json_encode(["error" => "–ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã"]);
        exit;
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—è mod-at
    // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª –º–µ–∂–¥—É app_name –∏ version
    $attachment = "[attachment=$file_id:$app_name$version$file_extension]";
    $new_mod_at = "mod-at|$attachment||";
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ xfields –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    $stmt = $mysqli->prepare("SELECT xfields FROM dle_post WHERE id = ?");
    $stmt->bind_param("i", $news_id);
    $stmt->execute();
    $result = $stmt->get_result();
    $row = $result->fetch_assoc();
    
    if (!$row) {
        echo json_encode(["error" => "–ó–∞–ø–∏—Å—å —Å ID $news_id –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"]);
        exit;
    }
    
    $current_xfields = $row['xfields'];
    
    // –ù–∞—Ö–æ–¥–∏–º —Å—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ mod-at
    $old_mod_at_pattern = '/mod-at\|\[attachment=\d+:[^|]+\]\|\|/';
    if (preg_match($old_mod_at_pattern, $current_xfields, $matches)) {
        $old_mod_at = $matches[0];
        
        // –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤–æ–µ
        $new_xfields = str_replace($old_mod_at, $new_mod_at, $current_xfields);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ mod-at –≤ xfields
        $current_date = date('Y-m-d H:i:s');
        $stmt = $mysqli->prepare("UPDATE dle_post SET xfields = ?, date = ? WHERE id = ?");
        $stmt->bind_param("ssi", $new_xfields, $current_date, $news_id);
        
        if ($stmt->execute()) {
            echo json_encode([
                "success" => true,
                "attachment" => $attachment,
                "old_mod_at" => $old_mod_at,
                "new_mod_at" => $new_mod_at
            ]);
        } else {
            echo json_encode(["error" => "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è mod-at: " . $mysqli->error]);
        }
    } else {
        echo json_encode(["error" => "–ü–æ–ª–µ mod-at –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ xfields"]);
    }
    exit;
}

// üìå –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –º–æ–¥–æ–≤ (parser2)
if ($action === 'create_mod_tracking_table') {
    $sql = "CREATE TABLE IF NOT EXISTS file_tracking_mod (
        id INT AUTO_INCREMENT PRIMARY KEY,
        news_id INT NOT NULL,
        app_name VARCHAR(255) NOT NULL,
        version VARCHAR(100) NOT NULL,
        file_size BIGINT NOT NULL,
        file_path VARCHAR(500) NOT NULL,
        checksum VARCHAR(32) NOT NULL,
        sha256_hash VARCHAR(64) NULL,
        package_name VARCHAR(255) NULL,
        source_priority INT DEFAULT 0,
        download_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        source_url VARCHAR(500) NOT NULL,
        INDEX idx_news_id (news_id),
        INDEX idx_app_name (app_name),
        INDEX idx_sha256 (sha256_hash),
        INDEX idx_package_name (package_name),
        INDEX idx_source_priority (source_priority)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci";
    
    if ($mysqli->query($sql)) {
        echo json_encode([
            "success" => true,
            "message" => "–¢–∞–±–ª–∏—Ü–∞ file_tracking_mod —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
        ]);
    } else {
        echo json_encode(["error" => "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã: " . $mysqli->error]);
    }
    exit;
}

// üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã file_tracking_mod
if ($action === 'check_mod_table_structure') {
    $table_name = 'file_tracking_mod';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞
    $check_table = $mysqli->query("SHOW TABLES LIKE '$table_name'");
    if ($check_table->num_rows === 0) {
        echo json_encode([
            "success" => false,
            "error" => "–¢–∞–±–ª–∏—Ü–∞ $table_name –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        ], JSON_UNESCAPED_UNICODE);
        exit;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
    $structure = $mysqli->query("DESCRIBE $table_name");
    if (!$structure) {
        echo json_encode([
            "success" => false,
            "error" => "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã: " . $mysqli->error
        ], JSON_UNESCAPED_UNICODE);
        exit;
    }
    
    $columns = [];
    while ($row = $structure->fetch_assoc()) {
        $columns[] = [
            "field" => $row['Field'],
            "type" => $row['Type'],
            "null" => $row['Null'],
            "key" => $row['Key'],
            "default" => $row['Default'],
            "extra" => $row['Extra']
        ];
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
    $indexes = $mysqli->query("SHOW INDEX FROM $table_name");
    $index_list = [];
    if ($indexes) {
        while ($index = $indexes->fetch_assoc()) {
            $index_list[] = [
                "name" => $index['Key_name'],
                "column" => $index['Column_name'],
                "unique" => $index['Non_unique'] == 0
            ];
        }
    }
    
    echo json_encode([
        "success" => true,
        "table_name" => $table_name,
        "columns" => $columns,
        "indexes" => $index_list,
        "column_count" => count($columns),
        "index_count" => count($index_list)
    ], JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT);
    exit;
}

echo json_encode(["error" => "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: $action"]);
?>
